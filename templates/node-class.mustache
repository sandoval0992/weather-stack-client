"use strict";

/*!
            +----------------------------------------------------------------+
            |           This class was automatically generated by an npm script                    |
            |               Do not modify the content of this file manually                                  |
            |       Refer to package.json to run the script for client regeneration       |
            +----------------------------------------------------------------+
 */

const baseHttpClient = require("./http/baseHttpClient");
const logger = require("log4js").getLogger("{{&className}}");

/**
 * @typedef {Object} ClientOptions
 * @property {string} url - base url to connect
 * @property {number} timeout - connection timeout in ms, if not set default timeout is 3000ms
 * @property {number} retryCounter -the retry counter if retry strategy is enabled
 * @property {string|Buffer} sslCert - TLS client cert
 * @property {string|Buffer} sslKey - TLS client key (PKCS8)
 * @property {string} sslPass - TLS client key passphrase
 * @property {string|Buffer} sslCA - TLS ca certificate chain
 * @property {function} fnCbErrorInBody - [Optional] Function CallBack to determine if error in body response for monitoring.
 *
 * {{&description}}
{{#version}}
 * version: {{&version}}
{{/version}}
 * @class {{&className}}
 */

class {{&className}} extends baseHttpClient {
    /**
    * Constructor
    * @param {ClientOptions} options - client options
    */
    constructor(options) {
        super();

        this.swaggerSpecs = {{&swaggerSpecs}};

    }

    {{#methods}}
        {{> method}}
    {{/methods}}

}
module.exports = {{&className}};
